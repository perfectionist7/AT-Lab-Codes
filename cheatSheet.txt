package com.example.lab1q1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import java.util.regex.Pattern

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        var field1 = findViewById<EditText>(R.id.editTextText)
        var field2 = findViewById<EditText>(R.id.editTextText2)
        var number = findViewById<EditText>(R.id.editTextNumber)
        var button = findViewById<Button>(R.id.button)

        button.setOnClickListener {
            val string1 = field1.text.toString()
            val string2 = field2.text.toString()
            if(isValidEmail(string2)) {
                Toast.makeText(this, string1 + string2, Toast.LENGTH_SHORT).show()
                
            }
            else{
                Toast.makeText(this, "NOOOO", Toast.LENGTH_LONG).show()
            }
        }
    }
    private fun isValidEmail(varEmail: String) : Boolean{
        var emailPattern = "[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+"
        return Pattern.matches(emailPattern,varEmail)
    }

}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


INTENTS

MainAcitivity

package com.example.lab1q1

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import java.util.regex.Pattern
import com.example.lab1q1.SecondActivity


class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        var field1 = findViewById<EditText>(R.id.editTextText)
        var field2 = findViewById<EditText>(R.id.editTextText2)
        var number = findViewById<EditText>(R.id.editTextNumber)
        var button = findViewById<Button>(R.id.button)

        button.setOnClickListener {
            val string1 = field1.text.toString()
            val string2 = field2.text.toString()
            val number = number.text.toString()
            if(isValidEmail(string2)) {
                Toast.makeText(this, string1 + string2, Toast.LENGTH_SHORT).show()
                val intent = Intent(this, SecondActivity::class.java)
                intent.putExtra("key_string1",string1)
                intent.putExtra("key_string2", string2)
                intent.putExtra("key_number", number )

                startActivity(intent)
            }
            else{
                Toast.makeText(this, "NOOOO", Toast.LENGTH_LONG).show()
            }
        }
    }

    private fun isValidEmail(varEmail: String) : Boolean{
        var emailPattern = "[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+"
        return Pattern.matches(emailPattern,varEmail)
    }

}

SecondActivity


package com.example.lab1q1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.TextView
import android.widget.Toast

class SecondActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_second)
        val intent = intent;
        val string1 = intent.getStringExtra("key_string1")
        val string2 = intent.getStringExtra("key_string2")
        val number = intent.getStringExtra("key_number")
        val text = findViewById<TextView>(R.id.textView)
        text.setText(string1+string2)
        Toast.makeText(this, string1+" "+string2,Toast.LENGTH_LONG ).show()
    }
}






~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MUSIC SPINNER

// MainActivity.kt
package com.example.lab2q1

import android.media.MediaPlayer
import android.os.Bundle
import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.Button
import android.widget.Spinner
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class MainActivity2 : AppCompatActivity() {

    private lateinit var mediaPlayer: MediaPlayer
    private lateinit var musicSpinner: Spinner
    private lateinit var playButton: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main2)

        musicSpinner = findViewById(R.id.musicSpinner)
        playButton = findViewById(R.id.playButton)

        // Add music options to the spinner
        val musicOptions = arrayOf("song1", "song2", "song3")
        val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item, musicOptions)
        musicSpinner.adapter = adapter
//
        // Initialize MediaPlayer
        mediaPlayer = MediaPlayer.create(this, R.raw.song1) // Default to the first song

        // Set OnClickListener for the play button
        playButton.setOnClickListener {
            if (mediaPlayer.isPlaying) {
                mediaPlayer.pause()
                playButton.text = "Play Music"
            } else {
                mediaPlayer.start()
                playButton.text = "Pause Music"
            }
        }
//
//        // Set OnItemSelectedListener for the spinner to change the currently playing music
        musicSpinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
            override fun onItemSelected(parentView: AdapterView<*>?, selectedItemView: View?, position: Int, id: Long) {
                val selectedSong = musicOptions[position]
                val resourceName = "raw/$selectedSong"
                val resourceId = resources.getIdentifier(resourceName, null, packageName)

                mediaPlayer.stop()
                mediaPlayer.release()
                mediaPlayer = MediaPlayer.create(this@MainActivity2, resourceId)
                playButton.text = "Pause Music"
                mediaPlayer.start()
            }

            override fun onNothingSelected(parentView: AdapterView<*>?) {
                // Do nothing
            }
        }

    }

    override fun onDestroy() {
        super.onDestroy()
        mediaPlayer.release()
    }
}



<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity2">

    <Spinner
        android:id="@+id/musicSpinner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"/>

    <Button
        android:id="@+id/playButton"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Play Music"/>

</LinearLayout>




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
xt: Context,
    private val items: ArrayList<Pair<String, Double>>
) : ArrayAdapter<Pair<String, Double>>(context, R.layout.layout, items) {

    private val checkedItems = ArrayList<Pair<String, Double>>()

    fun getCheckedItems(): ArrayList<Pair<String, Double>> {
        return checkedItems
    }

    override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
        val view = convertView ?: LayoutInflater.from(context).inflate(R.layout.layout, parent, false)

        val itemNameTextView = view.findViewById<TextView>(R.id.listItem)
        val itemPriceTextView = view.findViewById<TextView>(R.id.listPrice)
        val itemCheckBox = view.findViewById<CheckBox>(R.id.listCheckbox)

        val item = items[position]
        itemNameTextView.text = item.first
        itemPriceTextView.text = "${item.second}"

        itemCheckBox.setOnCheckedChangeListener { _, isChecked ->
            if (isChecked) {
                checkedItems.add(item)
            } else {
                checkedItems.remove(item)
            }
        }
        return view
    }
}


_____________________________________________________________________




package com.example.lab1q1

import android.content.Context
import android.database.DataSetObserver
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.view.ViewGroup
import android.widget.AbsListView
import android.widget.ArrayAdapter
import android.widget.BaseAdapter
import android.widget.Button
import android.widget.GridView
import android.widget.ImageView
import android.widget.ListAdapter
import android.widget.Spinner
import android.widget.Toast
import androidx.constraintlayout.widget.ConstraintLayout

class DiscountActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_discount)

        val discountSpinner: Spinner = findViewById(R.id.spinner)
        ArrayAdapter.createFromResource(
            this,
            R.array.discount_options,
            android.R.layout.simple_spinner_item
        ).also { adapter ->
            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
            discountSpinner.adapter = adapter
        }
        val gridView: GridView = findViewById(R.id.gridView)
        val adapter = ImageAdapter(this)
        gridView.adapter = adapter

        val rootLayout: ConstraintLayout = findViewById(R.id.backgroundLayout)
        val submitButton: Button = findViewById(R.id.submitButton)
        submitButton.setOnClickListener {
            val selectedDiscount = discountSpinner.selectedItem.toString().replace("%", "").toInt()
            val totalPrice = intent.getDoubleExtra("totalPrice", 0.0)
            val discountedPrice = totalPrice * (1 - selectedDiscount / 100.0)
            when (selectedDiscount) {
                5 -> rootLayout.setBackgroundColor(resources.getColor(R.color.discount_5))
                10 -> rootLayout.setBackgroundColor(resources.getColor(R.color.discount_10))
                20 -> rootLayout.setBackgroundColor(resources.getColor(R.color.discount_20))
            }
            Toast.makeText(this, "Discounted Price: $discountedPrice", Toast.LENGTH_SHORT).show()
        }
    }

    private class ImageAdapter(private val context: Context) : BaseAdapter(), ListAdapter {

        private val imageIds = intArrayOf(
            R.drawable.baseline_airplanemode_active_24,
            R.drawable.baseline_accessible_24,
            R.drawable.twotone_1x_mobiledata_24,
            R.drawable.baseline_airplanemode_active_24,
            R.drawable.baseline_accessible_24,
            R.drawable.twotone_1x_mobiledata_24,
            R.drawable.baseline_airplanemode_active_24,
            R.drawable.baseline_accessible_24,
            R.drawable.twotone_1x_mobiledata_24,
            R.drawable.baseline_airplanemode_active_24,
            R.drawable.baseline_accessible_24,
            R.drawable.twotone_1x_mobiledata_24
        ) // Sample images

        override fun getCount(): Int {
            return imageIds.size
        }

        override fun getItem(position: Int): Any {
            return imageIds[position]
        }

        override fun getItemId(position: Int): Long {
            return position.toLong()
        }

        override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
            val imageView: ImageView
            if (convertView == null) {
                // If convertView is null, inflate the layout for grid item
                imageView = ImageView(context)
                imageView.layoutParams =
                    AbsListView.LayoutParams(250, 250) // Set dimensions for grid item
                imageView.scaleType = ImageView.ScaleType.CENTER_CROP
            } else {
                imageView = convertView as ImageView
            }

            imageView.setImageResource(imageIds[position])
            return imageView
        }

        // Implementations for ListAdapter interface methods

        override fun getViewTypeCount(): Int {
            return 1 // We have only one type of view
        }

        override fun getItemViewType(position: Int): Int {
            return 0 // All items have the same view type
        }

        override fun isEnabled(position: Int): Boolean {
            return true // All items are enabled
        }

        override fun areAllItemsEnabled(): Boolean {
            return true // All items are enabled
        }

        override fun isEmpty(): Boolean {
            return imageIds.isEmpty()
        }

    }
}




__________________________________________________________

