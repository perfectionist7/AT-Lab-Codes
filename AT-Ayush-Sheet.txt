
SPINNER -

-------------------------------------------------------------------------------------------------------------------------------------

package com.example.b1question

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.*

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val spinner = findViewById<Spinner>(R.id.spinner)

        val items = arrayOf("Circle","Square","Rectangle")

        val adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, items)

        adapter.setDropDownViewResource(android.R.layout.simple_spinner_item)

        spinner.adapter = adapter

        spinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
            override fun onItemSelected(parent: AdapterView<*>, view: View?, position: Int, id: Long) {
                var selectedItem = parent.getItemAtPosition(position).toString()
                Toast.makeText(this@MainActivity,"item: $selectedItem",Toast.LENGTH_SHORT).show()

            }

            override fun onNothingSelected(parent: AdapterView<*>?) {

            }
        }

        var button = findViewById<Button>(R.id.button)

        button.setOnClickListener {
                var intent = Intent(this, SecondActivity::class.java)
                startActivity(intent)

        }

    }
}


Second Activity

package com.example.b1question

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.*

class SecondActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.secondactivity)
        var length = findViewById<EditText>(R.id.length)
        var breadth = findViewById<EditText>(R.id.breadth)


        var button = findViewById<Button>(R.id.calculate)

        button.setOnClickListener {
            val lengthdata = length.text.toString().toInt()
            val breadthdata = breadth.text.toString().toInt()
            val area = lengthdata * breadthdata;
            Toast.makeText(this@SecondActivity, "Area is $area", Toast.LENGTH_SHORT).show();
        }
    }
}


--------------------------------------------------------------------------------------------------------------------------------------

INTENT -
               var intent = Intent(this, SecondActivity::class.java)
                startActivity(intent)

androidmanifest.xml - 
		
		        <activity android:name=".SecondActivity"/>


--------------------------------------------------------------------------------------------------------------------------------------

TOAST - 

                Toast.makeText(this@MainActivity,"item: $selectedItem",Toast.LENGTH_SHORT).show()


--------------------------------------------------------------------------------------------------------------------------------------

ALERT DIALOG - 

package com.example.alertdialog

import android.content.Context
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.TextView
import androidx.appcompat.app.AlertDialog

class MainActivity : AppCompatActivity() {

    fun showAlert(context: Context, title: String, message: String) {
        val builder = AlertDialog.Builder(context)
        builder.setTitle(title)
        builder.setMessage(message)
        var textview: TextView = findViewById(R.id.textview)
        builder.setPositiveButton("OK") { dialog, _ ->
            textview.text = "Ok Pressed";
            textview.visibility = View.VISIBLE
            dialog.dismiss()
        }
        val dialog = builder.create()
        dialog.show()
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        var textview: TextView = findViewById<TextView>(R.id.textview)
        var alertbutton: Button = findViewById<Button>(R.id.button)
        var text_final = textview.text;

        alertbutton.setOnClickListener {
            showAlert(this,"Alert", text_final as String)
        }
    }
}

-------------------------------------------------------------------------------------------------------------------------

LISTVIEW - C2 QUESTION 


package com.example.c1question

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    private val subjects= arrayOf("IT", "CCE", "CSE")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        var listview = findViewById<ListView>(R.id.listview1)
        val adapter = ArrayAdapter(this,android.R.layout.simple_list_item_1, subjects)
        listview.adapter = adapter

        listview.setOnItemClickListener { _, _, position, _ ->
            val selecteditem = subjects[position]
            Toast.makeText(this, "Item selected is $selecteditem", Toast.LENGTH_SHORT).show()
            var intent = Intent(this, SecondActivity::class.java)
            startActivity(intent)
        }
    }
}


Second Activity 

package com.example.c1question

import android.content.Context
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.*
import androidx.appcompat.app.AlertDialog

class SecondActivity : AppCompatActivity() {


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.newactivity)
        var button = findViewById<Button>(R.id.button)
        var physics = findViewById<EditText>(R.id.physics)
        var chemistry = findViewById<EditText>(R.id.chemistry)
        var maths = findViewById<EditText>(R.id.maths)

        button.setOnClickListener {
            var physicsfinal = physics.text.toString();
            var chemistryfinal = chemistry.text.toString();
            var mathsfinal = maths.text.toString();

            val threshold = 200;

            val physicsint = physicsfinal.toInt()
            val chemistryint = chemistryfinal.toInt()
            val mathsint = mathsfinal.toInt()
            print(physicsint)
            print(chemistryint)
            print(mathsint)
            if ((physicsint + chemistryint + mathsint) > threshold) {
                showAlert(this, "Alert", "Above the threshold")
            }
        }

    }
    fun showAlert(context: Context, title: String, message: String) {
        val builder = AlertDialog.Builder(context)
        builder.setTitle(title)
        builder.setMessage(message)
        builder.setPositiveButton("OK") { dialog, _ ->
            dialog.dismiss()
        }
        val dialog= builder.create()
        dialog.show()

    }
}


--------------------------------------------------------------------------------------------------------------------------

GRID VIEW -

package com.example.gridview

import android.content.Context
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.*


class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val items = listOf("Item 1", "Item 2", "Item 3", "Item 4", "Item 5")
        val gridAdapter = GridAdapter(this, items)
        val gridView: GridView = findViewById(R.id.gridview)
        gridView.adapter = gridAdapter

        gridView.onItemClickListener = AdapterView.OnItemClickListener { parent, view, position, id ->
            val selectedItem = parent.getItemAtPosition(position) as String
            // Do something with the selected item
            Toast.makeText(this, "Selected Item: $selectedItem", Toast.LENGTH_SHORT).show()
        }

    }
}


class GridAdapter(private val context: Context, private val items: List<String>) : BaseAdapter() {

    override fun getCount(): Int {
        return items.size
    }

    override fun getItem(position: Int): Any {
        return items[position]
    }

    override fun getItemId(position: Int): Long {
        return position.toLong()
    }

    override fun getView(position: Int, convertView: View?, parent: ViewGroup?): View {
        val view: View = convertView ?: LayoutInflater.from(context).inflate(R.layout.grid_item_layout, parent, false)
        val itemTextView: TextView = view.findViewById(R.id.textView)
        itemTextView.text = items[position]
        return view
    }
}


make activity_main,xml with gridview

make grid_item_layout.xml

with a textview which does not have any margins


------------------------------------------------------------------------------------------------------------------------------

IMAGE ADAPTER


package com.example.imagegallery
import com.bumptech.glide.Glide
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import androidx.recyclerview.widget.GridLayoutManager
import androidx.recyclerview.widget.RecyclerView


class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val recyclerView: RecyclerView = findViewById(R.id.recyclerview)

        val imageList = listOf(
            "lion",   // Assuming lion.png is stored in the drawable directory
            "parrot", // Assuming parrot.png is stored in the drawable directory
            "tiger",  // Assuming tiger.png is stored in the drawable directory
            "penguin" // Assuming penguin.png is stored in the drawable directory
        )

        val adapter = ImageAdapter(imageList)
        recyclerView.layoutManager = GridLayoutManager(this, 3) // 3 columns
        recyclerView.adapter = adapter
    }
}

class ImageAdapter(private val imageList: List<String>) : RecyclerView.Adapter<ImageAdapter.ImageViewHolder>() {

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ImageViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_image, parent, false)
        return ImageViewHolder(view)
    }

    override fun onBindViewHolder(holder: ImageViewHolder, position: Int) {
        val imageName = imageList[position]
        val resourceId = holder.itemView.context.resources.getIdentifier(imageName, "drawable", holder.itemView.context.packageName)
        Glide.with(holder.itemView.context)
            .load(resourceId)
            .into(holder.imageView)
    }


    override fun getItemCount(): Int {
        return imageList.size
    }

    class ImageViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val imageView: ImageView = itemView.findViewById(R.id.imageView)
    }
}



make a recyler view in main_activity.xml 

make item_image.xml with imageView

---------------------------------------------------------------------------------------------------------------------------------


CHECKING EMAIL ADDRESS 


package com.example.lab1q1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val submitbutton: Button = findViewById<Button>(R.id.button)
        val emailid: EditText = findViewById<EditText>(R.id.emailaddress)
        val mobilenumber: EditText = findViewById<EditText>(R.id.mobilenumber)
        val password: EditText = findViewById(R.id.password)
        var mobileval = false
        var emailval = false

        submitbutton.setOnClickListener {
            val emailid_final = emailid.text.toString();
            val mobile_final = mobilenumber.text.toString();
            val password = password.text.toString();

            if(mobile_final.length == 10) {
                mobileval = true;
            }
            else {
                Toast.makeText(this, "Invalid Mobile Number Entered", Toast.LENGTH_SHORT).show();
            }

            if(emailid_final.contains('@')) {
                emailval = true
            }
            else {
                Toast.makeText(this,"Invalid email address", Toast.LENGTH_SHORT).show();
            }

            if(mobileval == true && emailval == true) {
                Toast.makeText(this, "All fields entered are correct! Account Created", Toast.LENGTH_SHORT).show();
            }
        }

    }
}

-----------------------------------------------------------------------------------------------------------------------------


PUTING EXTRA INTO INTENT - FEEDBACK SYSTEM


package com.example.feedbacksystem

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.EditText
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        var nameview = findViewById<EditText>(R.id.nametextview)
        var custview = findViewById<EditText>(R.id.custidtextview)
        var feedback = findViewById<EditText>(R.id.feedbacktextview)
        var submitbutton = findViewById<Button>(R.id.submit)

        submitbutton.setOnClickListener {
            var intent = Intent(this, SecondActivity::class.java)
            intent.putExtra("key", nameview.text.toString())
            intent.putExtra("key2", custview.text.toString())
            intent.putExtra("key3", feedback.text.toString())
            startActivity(intent)


        }

    }
}

Second Activity 

package com.example.feedbacksystem

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.EditText
import android.widget.Button
import android.widget.TextView

class SecondActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.second_activity)
        var final_feedback = findViewById<TextView>(R.id.final_feedback)
        val name = intent.getStringExtra("key")
        val custid = intent.getStringExtra("key2")
        val feedback = intent.getStringExtra("key3")

        final_feedback.text = "Name: $name with customer id: $custid and the feedback is $feedback"
        final_feedback.visibility = View.VISIBLE


    }
}


-------------------------------------------------------------------------------------------------------------------------------------------


GRIDVIEW + NOTIFICATION 

------------------------------------------------------------------------------------------------------------------------------------------

package com.example.gridview3

import android.app.NotificationChannel
import android.app.NotificationManager
import android.content.Context
import android.os.Build
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.GridView
import androidx.core.app.NotificationCompat

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        var gridview = findViewById<GridView>(R.id.gv)
        var items = arrayOf("ayush", "piyush", "random", "newone")
        var gridadapter = ArrayAdapter(this, R.layout.grid_item_layout, R.id.textView, items)
        gridview.adapter = gridadapter;
        gridview.setOnItemClickListener { parent, view, position, id ->
            val selecteditem = items[position]
            val builder = NotificationCompat.Builder(this, "channel_id")
                .setSmallIcon(android.R.drawable.stat_notify_chat)
                .setContentTitle("Selected Item")
                .setContentText("You have selected $selecteditem")
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)

            // Create a notification manager object
            val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

            // Check if the device is running Android Oreo or higher
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                // Create a notification channel
                val channel = NotificationChannel("channel_id", "Channel Name", NotificationManager.IMPORTANCE_DEFAULT)
                channel.description = "Channel Description"
                // Register the channel with the system
                notificationManager.createNotificationChannel(channel)
            }
            // Issue the notification
            notificationManager.notify(1, builder.build())
        }

    }

}

----------------------------------------------------------------------------------------------------------------------------------------------

CRUD OPERATION WITH SQLITE

---------------------------------------------------------------------------------------------------------------------------------------------

Go to AndroidManifest.xml

add these permissions -

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />

below <manifest> tag and above <application> tag

like here 

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Androidstudio"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

Make New Class DatabaseHelper and add the code below - 

import android.content.ContentValues
import android.content.Context
import android.database.Cursor
import android.database.sqlite.SQLiteDatabase
import android.database.sqlite.SQLiteOpenHelper

class DatabaseHelper(context: Context) : SQLiteOpenHelper(context, DATABASE_NAME, null, DATABASE_VERSION) {

    companion object {
        private const val DATABASE_VERSION = 1
        private const val DATABASE_NAME = "StudentManager.db"

        // Table name and columns
        private const val TABLE_NAME = "students"
        private const val COLUMN_ROLL_NUMBER = "roll_number"
        private const val COLUMN_NAME = "name"
        private const val COLUMN_MARKS = "marks"
    }

    override fun onCreate(db: SQLiteDatabase?) {
        val createTableQuery = "CREATE TABLE $TABLE_NAME (" +
                "$COLUMN_ROLL_NUMBER TEXT PRIMARY KEY," +
                "$COLUMN_NAME TEXT," +
                "$COLUMN_MARKS INTEGER)"
        db?.execSQL(createTableQuery)
    }

    override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {
        db?.execSQL("DROP TABLE IF EXISTS $TABLE_NAME")
        onCreate(db)
    }

    fun addStudent(rollNumber: String, name: String, marks: Int): Boolean {
        val db = this.writableDatabase
        val contentValues = ContentValues()
        contentValues.put(COLUMN_ROLL_NUMBER, rollNumber)
        contentValues.put(COLUMN_NAME, name)
        contentValues.put(COLUMN_MARKS, marks)
        val result = db.insert(TABLE_NAME, null, contentValues)
        return result != -1L
    }

    fun readAllStudents(): Cursor {
        val db = this.readableDatabase
        return db.rawQuery("SELECT * FROM $TABLE_NAME", null)
    }

    fun updateStudent(rollNumber: String, name: String, marks: Int): Boolean {
        val db = this.writableDatabase
        val contentValues = ContentValues()
        contentValues.put(COLUMN_NAME, name)
        contentValues.put(COLUMN_MARKS, marks)
        val result = db.update(TABLE_NAME, contentValues, "$COLUMN_ROLL_NUMBER = ?", arrayOf(rollNumber))
        return result != -1
    }

    fun deleteStudent(rollNumber: String): Boolean {
        val db = this.writableDatabase
        val result = db.delete(TABLE_NAME, "$COLUMN_ROLL_NUMBER = ?", arrayOf(rollNumber))
        return result != -1
    }
}


In the Main Activity

do this 


package com.example.androidstudio
import DatabaseHelper
import android.content.Context
import android.database.Cursor
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {
    fun showAlert(context: Context, title: String, message: String) {
        val builder = AlertDialog.Builder(context)
        builder.setTitle(title)
        builder.setMessage(message)

        builder.setPositiveButton("OK") { dialog, _ ->
            dialog.dismiss()
        }
        val dialog = builder.create()
        dialog.show()
    }
    private lateinit var databaseHelper: DatabaseHelper

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        databaseHelper = DatabaseHelper(this)

        val rollNumberEditText = findViewById<EditText>(R.id.rollNumberEditText)
        val nameEditText = findViewById<EditText>(R.id.nameEditText)
        val marksEditText = findViewById<EditText>(R.id.marksEditText)
        val addButton = findViewById<Button>(R.id.addButton)
        val displayButton = findViewById<Button>(R.id.displayButton)
        val updatestudent = findViewById<Button>(R.id.updatestudent)
        val deletestudent = findViewById<Button>(R.id.deletestudent)
        updatestudent.setOnClickListener {
            val rollNumber = rollNumberEditText.text.toString()
            val name = nameEditText.text.toString()
            val marks = marksEditText.text.toString()

            if (rollNumber.isNotEmpty() && name.isNotEmpty() && marks.isNotEmpty()) {
                if (databaseHelper.updateStudent(rollNumber, name, marks.toInt())) {
                    Toast.makeText(this, "Updated Student Successfully", Toast.LENGTH_SHORT).show()
                } else {
                    Toast.makeText(this, "Failed to update student", Toast.LENGTH_SHORT).show()
                }
            } else {
                Toast.makeText(this, "Please fill in all fields", Toast.LENGTH_SHORT).show()
            }

        }

        deletestudent.setOnClickListener {
            val rollNumber = rollNumberEditText.text.toString()

            if (rollNumber.isNotEmpty()) {
                if (databaseHelper.deleteStudent(rollNumber)) {
                    Toast.makeText(this, "Deleted Student Successfully", Toast.LENGTH_SHORT).show()
                } else {
                    Toast.makeText(this, "Failed to delete student", Toast.LENGTH_SHORT).show()
                }
            } else {
                Toast.makeText(this, "Please fill in roll number field", Toast.LENGTH_SHORT).show()
            }
        }
        addButton.setOnClickListener {
            val rollNumber = rollNumberEditText.text.toString()
            val name = nameEditText.text.toString()
            val marks = marksEditText.text.toString()

            if (rollNumber.isNotEmpty() && name.isNotEmpty() && marks.isNotEmpty()) {
                if (databaseHelper.addStudent(rollNumber, name, marks.toInt())) {
                    Toast.makeText(this, "Student added successfully", Toast.LENGTH_SHORT).show()
                } else {
                    Toast.makeText(this, "Failed to add student", Toast.LENGTH_SHORT).show()
                }
            } else {
                Toast.makeText(this, "Please fill in all fields", Toast.LENGTH_SHORT).show()
            }
        }

        displayButton.setOnClickListener {
            val cursor: Cursor = databaseHelper.readAllStudents()
            if (cursor.count == 0) {
                Toast.makeText(this, "No students to display", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }
            val displayString = StringBuilder()
            while (cursor.moveToNext()) {
                val rollNumber = cursor.getString(0)
                val name = cursor.getString(1)
                val marks = cursor.getInt(2)
                displayString.append("Roll Number: $rollNumber, Name: $name, Marks: $marks\n")
            }
            showAlert(this,"Selected Items", displayString.toString())
        }
    }

    override fun onDestroy() {
        databaseHelper.close()
        super.onDestroy()
    }
}


done!

--------------------------------------------------------------------------------------------------------------------------

